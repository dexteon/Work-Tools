function processPhonebook() {
  var doc = DocumentApp.openById('1jM4fwIg3u8bptOk0CVgOo0d8fr2TI978LFsQQCM3epg');
  var text = doc.getBody().getText();
  var lines = text.split('\n');
  
  Logger.log('Document Loaded. # of lines is: ' + lines.length);

  var sheet = SpreadsheetApp.openById('1sQLj73TD24iHIQFUQNup6OqL5h7VRDwWg9mXG1o-57k');
  var formattedSheet = sheet.getSheetByName('Formatted Entries');
  // Do not clear the formattedSheet to preserve the header
  
  var unformattedSheet = sheet.getSheetByName('Unformatted Entries');
  unformattedSheet.clearContents(); // Assuming it's safe to clear these

  var statisticsSheet = sheet.getSheetByName('Statistics');
  statisticsSheet.clearContents(); // Clear for new statistics
  
  var existingEntries = getExistingEntries(formattedSheet); // Function to get existing entries for duplication check
  
  var formattedData = [];
  var unformattedData = [];
  var companyCount = {};
  var entryPattern = /^(.+)\s+w\/(.+)\s+([0-9\-\+\(\) ]+)\s+(.+)$/;
  
  lines.slice(1).forEach(function(line) { // Start from line 1 to skip document header
    if (entryPattern.test(line)) {
      var matches = line.match(entryPattern);
      var name = matches[1].trim();
      var company = matches[2].trim();
      var phone = matches[3].trim();
      var email = matches[4].trim();

      // Handling '+' within company name
      var plusIndex = company.indexOf('+');
      if (plusIndex !== -1) {
        phone = company.substring(plusIndex) + " " + phone;
        company = company.substring(0, plusIndex).trim();
      }

      var entryKey = name + "|" + phone; // Key to check duplicates
      if (!existingEntries.has(entryKey)) { // Avoid duplicates
        formattedData.push([name, company, phone, email]);
        if (companyCount[company]) {
          companyCount[company]++;
        } else {
          companyCount[company] = 1;
        }
      }
    } else {
      unformattedData.push([line]);
    }
  });

  // Append new data to "Formatted Entries"
  appendData(formattedSheet, formattedData);
  
  // Populate "Unformatted Entries"
  if (unformattedData.length > 0) {
    unformattedSheet.getRange(2, 1, unformattedData.length, 1).setValues(unformattedData);
  }

  // Update statistics
  updateStatistics(statisticsSheet, lines, formattedData, unformattedData, companyCount);

  Logger.log('Script Done.');
}

function getExistingEntries(sheet) {
  var entries = new Set();
  var data = sheet.getDataRange().getValues();
  for (var i = 1; i < data.length; i++) {
    var name = data[i][0].trim();
    var phone = data[i][2].trim();
    entries.add(name + "|" + phone);
  }
  return entries;
}

function appendData(sheet, data) {
  if (data.length > 0) {
    var startRow = sheet.getLastRow() + 1;
    var range = sheet.getRange(startRow, 1, data.length, 4);
    range.setValues(data);
  }
}

function updateStatistics(sheet, lines, formattedData, unformattedData, companyCount) {
  // Implement the statistics update logic here
  // This function should populate the "Statistics" sheet with the calculated statistics
}
