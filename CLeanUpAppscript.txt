function logAndFlagEmails() {
  // Define the search criteria
  const daysAgo = 10; // Customize this value as needed
  const pastDate = new Date();
  pastDate.setDate(pastDate.getDate() - daysAgo);
  const formattedDate = Utilities.formatDate(pastDate, Session.getScriptTimeZone(), "yyyy/MM/dd");
  const searchQueries = [
    `(from:noreply@ OR from:*@test.com OR from:noreply@version.com) before:${formattedDate}`,
    `from:x@verizon.com subject:TESTEMAIL before:${formattedDate}`
  ];

  // Spreadsheet setup
  const spreadsheetId = 'YOUR_SPREADSHEET_ID'; // Replace with your actual Spreadsheet ID
  const logSheetName = 'Sheet1'; // Logging sheet
  const summarySheetName = 'Sheet2'; // Summary sheet
  const spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  const logSheet = spreadsheet.getSheetByName(logSheetName);
  const summarySheet = spreadsheet.getSheetByName(summarySheetName);

  if (!logSheet || !summarySheet) {
    console.log('One or more specified sheets not found.');
    return;
  }

    // Check for the "DELETE-ME" label, create it if it doesn't exist
  // let label = GmailApp.getUserLabels().find(l => l.getName() === "DELETE-ME");
  // if (!label) {
  //   label = GmailApp.createLabel("DELETE-ME");
  // }

  ...

  // Process each search query
  searchQueries.forEach((query) => {
    const threads = GmailApp.search(query);
    threads.forEach((thread) => {
      const messages = GmailApp.getMessagesForThread(thread);
      messages.forEach((message) => {
        if (message.getDate() < pastDate) { // Additional check
          // Log the email details
          console.log(`Flagged for deletion: ${message.getSubject()} from ${message.getFrom()}`);
          emailLogs.push([new Date(), message.getSubject(), message.getFrom(), 'Flagged for Deletion']);
          totalFlagged += 1;

          // Add "DELETE-ME" label to the thread
          // label.addToThread(thread); // This line is now commented out
        }
      });
    });
  });


  // Initialize the counter and log array
  let totalFlagged = 0;
  let emailLogs = [];

  // Process each search query
  searchQueries.forEach((query) => {
    const threads = GmailApp.search(query);
    threads.forEach((thread) => {
      const messages = GmailApp.getMessagesForThread(thread);
      messages.forEach((message) => {
        if (message.getDate() < pastDate) { // Additional check
          // Log the email details
          console.log(`Flagged for deletion: ${message.getSubject()} from ${message.getFrom()}`);
          emailLogs.push([new Date(), message.getSubject(), message.getFrom(), 'Flagged for Deletion']);
          totalFlagged += 1;

          // Add "DELETE-ME" label to the thread
          label.addToThread(thread);
        }
      });
    });
  });

  // Log to Spreadsheet
  if (emailLogs.length > 0) {
    // Append the log array to the log sheet
    emailLogs.forEach((log) => logSheet.appendRow(log));
    // Update the summary sheet
    summarySheet.appendRow([new Date(), 'Total Flagged for Deletion', totalFlagged]);
  }

  // Log the total count
  console.log(`Total emails flagged for deletion: ${totalFlagged}`);
}
