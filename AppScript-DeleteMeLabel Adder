//Label emails for deleteion deleteme

function labelOldEmailsFromMissingContacts() {
  const startTime = new Date();
  console.log(`Script started at: ${startTime}`);

  const sheetId = 'YOUR_SHEET_ID';
  const missingContactsSheetName = 'MissingContacts';
  console.log('Opening spreadsheet...');
  const ss = SpreadsheetApp.openById(sheetId);
  const sheet = ss.getSheetByName(missingContactsSheetName);
  const range = sheet.getDataRange();
  const values = range.getValues();
  console.log(`Fetched ${values.length} rows from the spreadsheet.`);

  let label = GmailApp.getUserLabelByName("deleteme");
  if (!label) {
    console.log('Creating "deleteme" label...');
    label = GmailApp.createLabel("deleteme");
  }

  values.forEach(function(row, index) {
    const email = row[0].trim();
    const query = `from:${email} before:2020/01/01`;
    console.log(`[${index + 1}/${values.length}] Searching for emails with query: "${query}"`);
    const searchStart = new Date();
    const threads = GmailApp.search(query);
    const searchEnd = new Date();
    console.log(`Found ${threads.length} threads for ${email} in ${searchEnd - searchStart}ms.`);

    if (threads.length > 0) {
      console.log(`Applying label to ${threads.length} threads...`);
      const labelStart = new Date();
      threads.forEach(thread => thread.addLabel(label));
      const labelEnd = new Date();
      console.log(`Labeled ${threads.length} threads in ${labelEnd - labelStart}ms.`);
    }
  });

  const endTime = new Date();
  console.log(`Script finished at: ${endTime}`);
  console.log(`Total execution time: ${(endTime - startTime)}ms.`);
}
