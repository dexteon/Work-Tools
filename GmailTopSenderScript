function logAndFlagEmails() {
  // Define the search criteria
  const daysAgo = 10; // Customize this value as needed
  const pastDate = new Date();
  pastDate.setDate(pastDate.getDate() - daysAgo);
  const formattedDate = Utilities.formatDate(pastDate, Session.getScriptTimeZone(), "yyyy/MM/dd");
  const excludeEmails = ["exclude1@example.com", "exclude2@example.com"]; // Add emails to exclude
  let excludeQuery = excludeEmails.map(email => `-from:${email}`).join(' ');
  const searchQueries = [
    `(${excludeQuery} from:noreply@ OR from:*@test.com OR from:noreply@version.com) before:${formattedDate}`,
    `${excludeQuery} from:x@verizon.com subject:TESTEMAIL before:${formattedDate}`
  ];

  // Spreadsheet setup
  const spreadsheetId = 'YOUR_SPREADSHEET_ID'; // Replace with your actual Spreadsheet ID
  const logSheetName = 'Sheet1'; // Change to your logging sheet's name
  const summarySheetName = 'Sheet2'; // Change to your summary sheet's name
  const spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  const logSheet = spreadsheet.getSheetByName(logSheetName);
  const summarySheet = spreadsheet.getSheetByName(summarySheetName);

  if (!logSheet || !summarySheet) {
    console.log('One or more specified sheets not found.');
    return;
  }

  let totalFlagged = 0;
  let emailLogs = [];

  searchQueries.forEach((query) => {
    const threads = GmailApp.search(query);
    threads.forEach((thread) => {
      const messages = GmailApp.getMessagesForThread(thread);
      messages.forEach((message) => {
        if (message.getDate() < pastDate) {
          console.log(`Flagged for deletion: ${message.getSubject()} from ${message.getFrom()}`);
          emailLogs.push([Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyy-MM-dd'T'HH:mm:ss'Z'"), message.getSubject(), message.getFrom(), 'Flagged for Deletion']);
          totalFlagged += 1;
        }
      });
    });
  });

  if (emailLogs.length > 0) {
    logSheet.getRange(logSheet.getLastRow() + 1, 1, emailLogs.length, emailLogs[0].length).setValues(emailLogs);
    summarySheet.appendRow([Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyy-MM-dd'T'HH:mm:ss'Z'"), 'Total Flagged for Deletion', totalFlagged]);
  }

  console.log(`Total emails flagged for deletion: ${totalFlagged}`);
}
